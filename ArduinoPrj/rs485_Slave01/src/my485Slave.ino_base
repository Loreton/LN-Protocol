/*
    http://www.gammon.com.au/forum/?id=11428
*/

#include <RS485_protocol.h>
#include <RS485_non_blocking.h>
#include <SoftwareSerial.h>

// const byte ENABLE_PIN   =  4;
const byte ENABLE_PIN   =  3;
const byte LED_PIN      = 13;


SoftwareSerial RS485 (10, 11);  // receive pin, transmit pin

// callback routines
void fWrite(const byte what)    { RS485.write (what); }
int fAvailable ()               { return RS485.available (); }
int fRead ()                    { return RS485.read (); }


void setup() {
    RS485.begin (9600);
    Serial.begin(9600);
    pinMode (ENABLE_PIN, OUTPUT);  // driver output enable
    pinMode (LED_PIN,    OUTPUT);  // built-in LED
}


// DEV=/dev/Arduino4 && ino build -m nano328 && ino upload -p $DEV -m nano328 && ino serial -p $DEV
void loop() {
    byte buf [10];

    byte received = recvMsg (fAvailable, fRead, buf, sizeof (buf));
    // Serial.print("messaggio ricevuto:");Serial.println(received);



    if (received) {
        Serial.print("[Slave] Comando ricevuto: ");printHex(buf, sizeof(buf));Serial.println("");
        if (buf [0] != 1) {
            Serial.print("      Non e' per me:");Serial.println(buf[0]);
            return;  // not my device
        }


        if (buf [1] != 2) {
            Serial.print("      Comando sconosciuto:");Serial.println(buf[1]);
            return;  // unknown command
        }

        Serial.print("      Comando valido:");Serial.println(buf[1]);
        byte msg [] = {
           0,  // device 0 (master)
           3,  // turn light on command received
        };

        delay (1);  // give the master a moment to prepare to receive
        digitalWrite (ENABLE_PIN, HIGH);  // enable sending
        sendMsg (fWrite, msg, sizeof msg);
        Serial.print("[Slave] Risposta inviata: ");printHex(msg, sizeof(msg));Serial.println("");
        digitalWrite (ENABLE_PIN, LOW);  // disable sending

        analogWrite (11, buf [2]);  // set light level
    }  // end if something received

}  // end of loop



void printHex(const byte *data, const byte len) {
    byte i;

    Serial.print("len:");
    Serial.print(len, DEC);
    Serial.print("  -  ");
    for (i=0; i<len; i++) {
        Serial.print(data[i], HEX);
        Serial.print(" ");
    }
}